apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysql-pv-claim
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 20Gi
---
kind: StorageClass
apiVersion: storage.k8s.io/v1
metadata:
  name: manual
provisioner: kubernetes.io/gce-pd
parameters:
  type: pd-standard
  replication-type: none


apiVersion: v1
kind: Service
metadata:
  name: mysql
spec:
  ports:
    - port: 3306
  selector:
    app: mysql
  clusterIP: None
---
apiVersion: app/v1 # for versions before 1.9.0 use apps/v1beta2
kind: Deployment
metadata:
  name: mysql
spec:
  selector:
    matchLabels:
      app: mysql
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: mysql
    spec:
      containers:
        - image: mysql:5.7
          name: mysql
          env:                              # Environment variables passed to the container
          - name: MYSQL_ROOT_PASSWORD
            valueFrom:                      # Read environment variables from k8s secrets
              secretKeyRef:
                name: mysql-local-secrets
                key: MYSQL_ROOT_PASSWORD
          ports:
          - containerPort: 3306             # The port that the container express
            name: mysql
          volumeMounts:
          - name: mysql-persistent-storage  # This name should match the name specified in 'volume.name'
            mountPath: /var/lib/mynesql
          volumes:                          # A PersistentVolume is mounted as a volume to the Pod
           - name: mysql-persistent-storage
             persistentVolumeClaim:
               claimName: mysql-pv-claim
